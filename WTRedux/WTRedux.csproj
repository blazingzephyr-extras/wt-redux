<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
		<Platform Condition=" '$(Platform)' == '' ">x64</Platform>
		<OutputType>Exe</OutputType>
		<TargetFramework>net8.0</TargetFramework>
		<Platforms>x64</Platforms>
		<StartupObject>WorldTour.WTGame</StartupObject>
		<AssemblyName>World Tour IV</AssemblyName>
		<RootNamespace>WorldTour</RootNamespace>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<AllowUnsafeBlocks>True</AllowUnsafeBlocks>
		<WarningLevel>4</WarningLevel>
		<ProduceReferenceAssembly>False</ProduceReferenceAssembly>
		<ErrorReport>prompt</ErrorReport>
		<ConsolePause>False</ConsolePause>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
		<DebugSymbols>True</DebugSymbols>
		<DebugType>full</DebugType>
		<Optimize>False</Optimize>
		<DefineConstants>DEBUG;</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
		<DebugSymbols>False</DebugSymbols>
		<DebugType>none</DebugType>
		<Optimize>True</Optimize>
	</PropertyGroup>

	<PropertyGroup Condition="$([MSBuild]::IsOsPlatform('Windows'))">
		<PlatformTarget>$(Platform)</PlatformTarget>
	</PropertyGroup>

	<ItemGroup>
		<ProjectReference Include="..\FNA\FNA.csproj" />
		<ProjectReference Include="..\PhysFS.NET\PhysFS.NET\PhysFS.NET.csproj" />
		<ProjectReference Include="..\PhysFS.NET\physfs\build\physfs.vcxproj">
			<ReferenceOutputAssembly>false</ReferenceOutputAssembly>
			<OutputItemType>Content</OutputItemType>
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</ProjectReference>
		<ProjectReference Include="..\spine-fna\spine-fna.csproj" />
	</ItemGroup>

	<ItemGroup>
		<Compile Include="..\ecslite\src\components.cs" Link="ecslite\components.cs" />
		<Compile Include="..\ecslite\src\entities.cs" Link="ecslite\entities.cs" />
		<Compile Include="..\ecslite\src\filters.cs" Link="ecslite\filters.cs" />
		<Compile Include="..\ecslite\src\systems.cs" Link="ecslite\systems.cs" />
		<Compile Include="..\ecslite\src\worlds.cs" Link="ecslite\worlds.cs" />
		<Compile Include="..\spine-physfs\src\PhysFsTextureLoader.cs" Link="spine-physfs\PhysFsTextureLoader.cs" />
	</ItemGroup>

	<Target Name="DownloadLibs" AfterTargets="PreBuildEvent" Condition="$([MSBuild]::IsOsPlatform('Windows')) AND !Exists('$(BaseIntermediateOutputPath)\fnalibs')">
		<Exec Command="&quot;C:/Program Files/GitHub CLI/gh.exe&quot; auth login" />
		<Exec Command="&quot;C:/Program Files/GitHub CLI/gh.exe&quot; run download --repo FNA-XNA/fnalibs-dailies --dir &quot;$(BaseIntermediateOutputPath)\&quot;" />
	</Target>

	<Target Name="CopyLibs" AfterTargets="PreBuildEvent" Condition="$([MSBuild]::IsOsPlatform('Windows'))">
		<ItemGroup>
			<Libs Include="$(BaseIntermediateOutputPath)\fnalibs\$(Platform)\**\*" />
		</ItemGroup>
		<Copy SourceFiles="@(Libs)" DestinationFolder="$(OutputPath)" SkipUnchangedFiles="true" />
	</Target>
	
	<Target Name="CopyAssets" AfterTargets="PreBuildEvent">
		<ItemGroup>
			<Assets Include="$(ProjectDir)\assets\**" />
		</ItemGroup>
		<Copy SourceFiles="@(Assets)" DestinationFolder="$(OutputPath)" SkipUnchangedFiles="true" />
	</Target>

</Project>
